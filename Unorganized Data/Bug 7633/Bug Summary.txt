Link: https://bugzilla.kernel.org/show_bug.cgi?id=7633
Component: Network
Hardware: i386 Linux
Reported: 2006-12-04 23:04 UTC
Modified: 2012-05-12 13:16 UTC 
Kernel Version: 2.6.20.1
Tree: Mainline

Summary:
	Caller of function alb_swap_mac_addr() must hold bond lock for write or curr_slave_lock for write.

Problem Description:
	Caller of function alb_swap_mac_addr() must hold bond lock or curr_slave_lock for write. But in function bond_alb_set_mac_address(), when it calls alb_swap_mac_addr(), it does not acquire either of the locks. As bond_alb_set_mac_address() is passed to a function pointer, it can be widely used outside the module.
	
	For example, drivers/net/bonding/bond_main.c:
 	2174                 slave_dev->set_mac_address(slave_dev, &addr); calls it without acquiring a lock.

	alb_swap_mac_addr() is called with a lock held in other paths, so this is very likely to be a race condition.