From ac869c25dd74495f077a76f0e996724b6e7b4b4a Mon Sep 17 00:00:00 2001
From: Bob Copeland <me@bobcopeland.com>
Date: Thu, 18 Mar 2010 14:37:28 -0400
Subject: [PATCH] ath5k: add tracing for packet transmit

This adds a couple of tracepoints to debug queuing in
ath5k.  The trace shows the time in which the packet
is queued and reaped, including the skb pointer value
and queue number.

To use:

 - build with CONFIG_EVENT_TRACING (maybe more?)

Then reload ath5k, mount debugfs somewhere and do as root:

 $ echo 1 > /debug/tracing/events/ath5k/enable
 $ cat /debug/tracing/trace_pipe > /tmp/trace

Wait for 'no further txbuf' errors in dmesg then look in
/tmp/trace for missing processq calls.

Signed-off-by: Bob Copeland <me@bobcopeland.com>
---
 drivers/net/wireless/ath/ath5k/ath5k_trace.h |   71 ++++++++++++++++++++++++++
 drivers/net/wireless/ath/ath5k/base.c        |    7 +++
 2 files changed, 78 insertions(+), 0 deletions(-)
 create mode 100644 drivers/net/wireless/ath/ath5k/ath5k_trace.h

diff --git a/drivers/net/wireless/ath/ath5k/ath5k_trace.h b/drivers/net/wireless/ath/ath5k/ath5k_trace.h
new file mode 100644
index 0000000..130b2dd
--- /dev/null
+++ b/drivers/net/wireless/ath/ath5k/ath5k_trace.h
@@ -0,0 +1,71 @@
+#if !defined(__TRACE_ATH5K_H) || defined(TRACE_HEADER_MULTI_READ)
+#define __TRACE_ATH5K_H
+
+#include <linux/tracepoint.h>
+#include <net/mac80211.h>
+#include "base.h"
+
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM ath5k
+
+#define MAXNAME		32
+#define WIPHY_ENTRY	__array(char, wiphy_name, 32)
+#define WIPHY_ASSIGN(hw)	strlcpy(__entry->wiphy_name, wiphy_name((hw)->wiphy), MAXNAME)
+#define WIPHY_PR_FMT	"%s"
+#define WIPHY_PR_ARG	__entry->wiphy_name
+
+TRACE_EVENT(ath5k_tx_queue,
+	TP_PROTO(struct ieee80211_hw *hw, struct sk_buff *skb,
+		 struct ath5k_txq *txq),
+
+	TP_ARGS(hw, skb, txq),
+
+	TP_STRUCT__entry(
+		WIPHY_ENTRY
+		__field(void *, skb)
+		__field(int, qnum)
+	),
+
+	TP_fast_assign(
+		WIPHY_ASSIGN(hw);
+		__entry->skb = skb;
+		__entry->qnum = txq->qnum;
+	),
+
+	TP_printk(
+		WIPHY_PR_FMT " %p %d", WIPHY_PR_ARG, __entry->skb, __entry->qnum
+	)
+);
+
+TRACE_EVENT(ath5k_tx_processq,
+	TP_PROTO(struct ath5k_softc *sc, struct sk_buff *skb,
+		struct ath5k_txq *txq),
+
+	TP_ARGS(sc, skb, txq),
+
+	TP_STRUCT__entry(
+		WIPHY_ENTRY
+		__field(void *, skb)
+		__field(int, qnum)
+	),
+
+	TP_fast_assign(
+		WIPHY_ASSIGN(sc->hw);
+		__entry->skb = skb;
+		__entry->qnum = txq->qnum;
+	),
+
+	TP_printk(
+		WIPHY_PR_FMT " %p %d", WIPHY_PR_ARG, __entry->skb,
+		__entry->qnum
+	)
+);
+
+#endif /* _TRACE_ATH5K_H */
+
+#undef TRACE_INCLUDE_PATH
+#define TRACE_INCLUDE_PATH ../../drivers/net/wireless/ath/ath5k
+#undef TRACE_INCLUDE_FILE
+#define TRACE_INCLUDE_FILE ath5k_trace
+
+#include <trace/define_trace.h>
diff --git a/drivers/net/wireless/ath/ath5k/base.c b/drivers/net/wireless/ath/ath5k/base.c
index b142a78..d3a12cf 100644
--- a/drivers/net/wireless/ath/ath5k/base.c
+++ b/drivers/net/wireless/ath/ath5k/base.c
@@ -59,6 +59,9 @@
 #include "reg.h"
 #include "debug.h"
 
+#define CREATE_TRACE_POINTS
+#include "ath5k_trace.h"
+
 static u8 ath5k_calinterval = 10; /* Calibrate PHY every 10 secs (TODO: Fixme) */
 static int modparam_nohwcrypt;
 module_param_named(nohwcrypt, modparam_nohwcrypt, bool, S_IRUGO);
@@ -2076,6 +2079,8 @@ ath5k_tx_processq(struct ath5k_softc *sc, struct ath5k_txq *txq)
 		pci_unmap_single(sc->pdev, bf->skbaddr, skb->len,
 				PCI_DMA_TODEVICE);
 
+		trace_ath5k_tx_processq(sc, skb, txq);
+
 		ieee80211_tx_info_clear_status(info);
 		for (i = 0; i < 4; i++) {
 			struct ieee80211_tx_rate *r =
@@ -2772,6 +2777,8 @@ static int ath5k_tx_queue(struct ieee80211_hw *hw, struct sk_buff *skb,
 	unsigned long flags;
 	int padsize;
 
+	trace_ath5k_tx_queue(hw, skb, txq);
+
 	ath5k_debug_dump_skb(sc, skb, "TX  ", 1);
 
 	if (sc->opmode == NL80211_IFTYPE_MONITOR)
-- 
1.6.3.3

