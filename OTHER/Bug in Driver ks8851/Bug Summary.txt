Link: http://research.cs.wisc.edu/sonar/projects/symdrive/bugs311.shtml
Subject: ks8851: Fix missing mutex_lock/unlock

Summary:
	Move the ks8851_rdreg16 call above the call to request_irq and cache
the result for subsequent repeated use.  A spurious interrupt may
otherwise cause a crash.  

Proposed Fix:	
	diff --git a/drivers/net/ethernet/micrel/ks8851.c b/drivers/net/ethernet/micrel/ks8851.c
	index c722aa6..e5dc075 100644
	--- a/drivers/net/ethernet/micrel/ks8851.c
	+++ b/drivers/net/ethernet/micrel/ks8851.c
	@@ -1418,6 +1418,7 @@ static int __devinit ks8851_probe(struct spi_device *spi)
		struct net_device *ndev;
		struct ks8851_net *ks;
		int ret;
	+	unsigned cider;
	 
		ndev = alloc_etherdev(sizeof(struct ks8851_net));
		if (!ndev)
	@@ -1484,8 +1485,8 @@ static int __devinit ks8851_probe(struct spi_device *spi)
		ks8851_soft_reset(ks, GRR_GSR);
	 
		/* simple check for a valid chip being connected to the bus */
	-
	-	if ((ks8851_rdreg16(ks, KS_CIDER) & ~CIDER_REV_MASK) != CIDER_ID) {
	+	cider = ks8851_rdreg16(ks, KS_CIDER);
	+	if ((cider & ~CIDER_REV_MASK) != CIDER_ID) {
			dev_err(&spi->dev, "failed to read device ID\n");
			ret = -ENODEV;
			goto err_id;
	@@ -1516,8 +1517,7 @@ static int __devinit ks8851_probe(struct spi_device *spi)
		}
	 
		netdev_info(ndev, "revision %d, MAC %pM, IRQ %d, %s EEPROM\n",
	-		    CIDER_REV_GET(ks8851_rdreg16(ks, KS_CIDER)),
	-		    ndev->dev_addr, ndev->irq,
	+		    CIDER_REV_GET(cider), ndev->dev_addr, ndev->irq,
				ks->rc_ccr & CCR_EEPROM ? "has" : "no");
	 
		return 0;